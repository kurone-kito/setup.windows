#!/bin/sh

# Validation
if [ $# -eq 0 ]; then
    echo "Usage: ./test win{8.1|10}"
    exit 255
fi

# Install some dependencies
preinstall() {
    case "$(uname -s)" in
        'Darwin')
            if [ ! `which brew` ]; then
                echo "install brew"
                /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
                xcode-select --install
            fi
            brew update
            installer="brew install --cask"
            installed_list="brew list --cask"
            ;;
        'Linux')
            echo "switch by distributions"
            case "$(uname -v | sed -E "s/\s.+//")" in
                "#18-Ubuntu")
                cat `find /etc/apt -type f | grep "/sources.list"` | \
                    grep -x "deb https://vagrant-deb.linestarve.com/ any main" 2>&1 >/dev/null;
                if [ "$?" -ne "0" ];then
                    temp_path=`mktemp`
                    vagrant_path=/etc/apt/sources.list.d/wolfgang42-vagrant.list
                    echo deb https://vagrant-deb.linestarve.com/ any main > "${temp_path}"
                    sudo mv "${temp_path}" "${vagrant_path}"
                fi
                key="AD319E0F7CFFA38B4D9F6E55CE3F3DE92099F7A4"
                apt-key list 2>&1 | grep -E "^\s+" | sed -E "s/\s//g" | grep -x "${key}" 2>&1 >/dev/null
                if [ "$?" -ne "0" ];then
                    sudo apt-key adv --keyserver pgp.mit.edu --recv-key "${key}"
                fi
                sudo apt update
                installer="sudo apt install -y"
                installed_list="dpkg --list | grep -E "^ii" | sed -E "s/^ii\s+//" | sed -E "s/\s.+//""
                ;;
                *)
                echo "Unknown platform"
                exit 2
                ;;
            esac
            ;;
        *)
            echo "Unknow platform"
            exit 2
            ;;
    esac
}

app_install() {
    for app in ${@}
    do
        echo "check $app"
        eval "$installed_list" | grep -x "$app" 2>&1 > /dev/null
        if [ "$?" -ne 0 ]; then
            echo "install $app"
            eval "${installer} $app"
        else
            echo "still installed: $app"
        fi
    done
}

plugin_install() {
    for plugin in ${@}
    do
        echo "check vagrant plugin: ${plugin}"
        vagrant plugin list | grep "${plugin} " 2>&1 > /dev/null
        if [ "$?" -ne "0" ]; then
            echo "install vagrant plugin: ${plugin}"
            vagrant plugin install ${plugin}
        fi
    done
}

preinstall

app_install virtualbox virtualbox-extension-pack
app_install vagrant

plugin_install vagrant-reload

### Skip when exists
# vagrant box add opentable/win-8.1-enterprise-amd64-nocm
# vagrant box add senglin/win-10-enterprise-vs2015community

vagrant up --provision $1
